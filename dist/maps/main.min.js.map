{"version":3,"sources":["main.js"],"names":["addShadow","document","addEventListener","navbar","window","innerWidth","classList","add","querySelectorAll","counterItems","options","rootMargin","console","entry","isIntersecting","updateCounter","finalNumber","counter","parseInt","getAttribute","value","textContent","concat","Math","floor","setTimeout","counterBox","observer","IntersectionObserver","startCounter","swiper","pagination","Swiper","direction","spaceBetween","loop","breakpoints","el","slidesPerView","992","scrollbar","navigation","nextEl","accordion","prevEl","setAttribute","closeAccordionItem","item","previousElementSibling","accordionBtns","openAccordionItems","isActive","this","nextElementSibling","toggle","currentBtn","forEach","btn","e","contains","target"],"mappings":"aAAA,IAAMA,UAAY,WACjBC,SAASC,iBAAiB,mBAAoB,WAD/C,IAAMF,EAAYC,SAAZD,cAAkB,SAAA,EACvBC,OAASC,WAAAA,KAGPC,EAFKA,UAASF,IAAAA,eAAsB,EAIrCG,OAFCD,iBAAoB,SAAC,WACtB,IAAAC,OAAAC,aACOH,IAAPE,OAAOF,QAGJC,EAFEC,UAAOC,IAAAA,eAAkB,EAI3BF,EAFAA,UAAOG,OAAUC,eAAI,EAKxB,CAAC,CACF,CAAC,CACF,EACAP,cAAAA,UAFG,EAEQC,SAAAO,iBAAA,UAAA,GAELC,WAAeR,SAASO,cAAAA,cAA4B,EAGpDE,QAAU,CACfC,WAAU,QACX,EAGCC,aAAmB,SAACC,GAApBD,QAEIC,IAAOA,EAAEC,GAAAA,cAAgB,EAAzBD,EAEIE,GAAAA,gBADPN,aAEQO,QAAW,SAAAC,IACHC,SAAdH,IADA,IAGAC,EAAcA,EAAWG,aAAM,aAAA,EAE/BC,EAASF,SAAGF,EAAaK,WAAA,EAArBD,EAIHH,GAHAA,EAIDI,YAAA,GAAAC,OAAAC,KAAAC,MAAAJ,EAHCK,EAAWV,GAGZ,CAAA,EAHCU,WAIDV,EAAA,CAAA,GAGDE,EAACI,YAAAL,CAEH,GAGgBU,CAEjB,CAAA,CALA,EAUCC,SAAA,IAAAC,qBAAAC,aAAAnB,OAAA,EAGCoB,QAVFH,SAQCI,QAAYL,UAAA,EAEX,IAAAM,OAAA,UAAA,CANDC,UAQAC,aAPAC,KAQAC,CAAAA,EALAL,WAQC,CACDM,GAAC,oBAPD,EACAC,cAQY,EAPZJ,aAQS,GAPTE,YAQS,CACTG,IAAC,CAEDD,cAAA,CACAE,CARA,EAWAC,WAAC,CAIFC,OAAMC,sBACLC,OAAMD,qBAXN,EAGAH,UAaMK,CAZLR,GAaAS,mBAZD,CACD,CAAC,GAIKH,UAcGrC,WAbR,IAAMqC,EAcSI,SAAKC,cAAAA,YAAsB,EAbpCC,EAcMhD,SAAAO,iBAAA,qBAAA,EAZZ,SAcG0C,IAbF,IAcCC,EAAAC,KAAAC,mBAAA/C,UAAAgD,OAAA,QAAA,EAbDF,KAcEP,aAAA,gBAAAM,EAAA,OAAA,OAAA,EACHL,EAACM,IAAA,CAbD,CAiBsB,SAApBN,EAAoBS,GACrBtD,SAAAO,iBAAA,yBAAA,EACAgD,QAAA,SAAAT,GAEDE,EAAAA,yBAA0BM,IAAAR,EAAAzC,UACrBJ,OAAAA,QAAiB,EACrBuD,EAAAV,EAAAC,yBAGDS,EAAAZ,aAAA,gBAAA,OAAA,CAdC,CAAC,CACF,CAQAI,EAAcO,QAAQ,SAACC,GAAG,OACzBA,EAAIvD,iBAAiB,QAASgD,CAAkB,CAAC,CAClD,EAEA9C,OAAOF,iBAAiB,QAVM,SAACwD,GACzBf,EAAUgB,SAASD,EAAEE,MAAM,GAC/Bd,EAAmB,CAErB,CAMsD,CACvD,EACAH,UAAU","file":"../js/main.min.js","sourcesContent":["const addShadow = () => {\r\n\tdocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\t\tconst navbar = document.querySelector(\".navbar\")\r\n\t\tif (window.innerWidth < 992) {\r\n\t\t\tnavbar.classList.add(\"navbar-shadow\")\r\n\t\t}\r\n\t\twindow.addEventListener(\"scroll\", function () {\r\n\t\t\tif (window.innerWidth > 991) {\r\n\t\t\t\tif (window.scrollY > 150) {\r\n\t\t\t\t\tnavbar.classList.add(\"navbar-shadow\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnavbar.classList.remove(\"navbar-shadow\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\naddShadow()\r\n\r\nconst counterItems = document.querySelectorAll(\".counter\")\r\nconst counterBox = document.querySelector(\".counter-box\")\r\n\r\nconst options = {\r\n\trootMargin: \"-150px\",\r\n}\r\n\r\nconst startCounter = (entry) => {\r\n\tconsole.log(entry[0].isIntersecting)\r\n\r\n\tif (entry[0].isIntersecting) {\r\n\t\tcounterItems.forEach((counter) => {\r\n\t\t\tconst updateCounter = () => {\r\n\t\t\t\tconst finalNumber = counter.getAttribute(\"data-number\")\r\n\t\t\t\tconst value = parseInt(counter.textContent)\r\n\r\n\t\t\t\tconst speed = finalNumber / 300\r\n\r\n\t\t\t\tif (value < finalNumber) {\r\n\t\t\t\t\tcounter.textContent = `${Math.floor(value + speed)}`\r\n\t\t\t\t\tsetTimeout(updateCounter, 1)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcounter.textContent = finalNumber\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tupdateCounter()\r\n\t\t})\r\n\t}\r\n}\r\n\r\nconst observer = new IntersectionObserver(startCounter, options)\r\nobserver.observe(counterBox)\r\n\r\nconst swiper = new Swiper(\".swiper\", {\r\n\t// Optional parameters\r\n\tdirection: \"horizontal\",\r\n\tloop: true,\r\n\r\n\t// If we need pagination\r\n\tpagination: {\r\n\t\tel: \".swiper-pagination\",\r\n\t},\r\n\tslidesPerView: 1,\r\n\tspaceBetween: 20,\r\n\tbreakpoints: {\r\n\t\t992: {\r\n\t\t\tslidesPerView: 2,\r\n\t\t},\r\n\t},\r\n\t// Navigation arrows\r\n\tnavigation: {\r\n\t\tnextEl: \".swiper-button-next\",\r\n\t\tprevEl: \".swiper-button-prev\",\r\n\t},\r\n\r\n\t// And if we need scrollbar\r\n\tscrollbar: {\r\n\t\tel: \".swiper-scrollbar\",\r\n\t},\r\n})\r\n\r\n\r\n\r\nconst accordion = () => {\r\n\tconst accordion = document.querySelector(\".accordion\")\r\n\tconst accordionBtns = document.querySelectorAll(\".accordion__box-btn\")\r\n\r\n\tfunction openAccordionItems() {\r\n\t\tconst isActive = this.nextElementSibling.classList.toggle(\"active\")\r\n\t\tthis.setAttribute(\"aria-expanded\", isActive ? \"true\" : \"false\")\r\n\t\tcloseAccordionItem(this)\r\n\t}\r\n\r\n\tconst closeAccordionItem = (currentBtn) => {\r\n\t\tconst allActiveItems = document.querySelectorAll(\".accordion__info.active\")\r\n\t\tallActiveItems.forEach((item) => {\r\n\t\t\tif (item.previousElementSibling !== currentBtn) {\r\n\t\t\t\titem.classList.remove(\"active\")\r\n\t\t\t\tconst btn = item.previousElementSibling\r\n\t\t\t\tif (btn) {\r\n\t\t\t\t\tbtn.setAttribute(\"aria-expanded\", \"false\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst clickOutsideAccordion = (e) => {\r\n\t\tif (!accordion.contains(e.target)) {\r\n\t\t\tcloseAccordionItem()\r\n\t\t}\r\n\t}\r\n\r\n\taccordionBtns.forEach((btn) =>\r\n\t\tbtn.addEventListener(\"click\", openAccordionItems)\r\n\t)\r\n\r\n\twindow.addEventListener(\"click\", clickOutsideAccordion)\r\n}\r\naccordion()"]}